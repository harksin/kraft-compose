version: "3"
services:
   kafka:
     image: 'bitnami/kafka:3.4.0'
     ports:
       - '9092:9092'
     volumes:
       - "kafka_data:/bitnami"
     environment:
       - BITNAMI_DEBUG=yes
       - KAFKA_ENABLE_KRAFT=yes
       - KAFKA_CFG_PROCESS_ROLES=broker,controller
       - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=DOCKER_INTERNAL
       - KAFKA_CFG_LISTENERS=CONTROLLER://:9093,PLAINTEXT://:9092,DOCKER_INTERNAL://:19092
       - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,DOCKER_INTERNAL:PLAINTEXT
       - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
       - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
       - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
       - ALLOW_PLAINTEXT_LISTENER=yes
       - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,DOCKER_INTERNAL://kafka:19092
       - KAFKA_CFG_NODE_ID=1
       - KAFKA_CFG_DELETE_TOPIC_ENABLE=true
     networks:
       - kraft
  #  minio:
  #   image: docker.io/bitnami/minio:2023
  #   ports:
  #     - '9000:9000'
  #     - '9001:9001'
  #   environment:
  #     - MINIO_ROOT_USER=minio-root-user
  #     - MINIO_ROOT_PASSWORD=minio-root-password
  #   volumes:
  #     - 'minio_data:/data'

volumes:
  kafka_data:
    driver: local
  minio_data:
    driver: local

networks:
  kraft:
